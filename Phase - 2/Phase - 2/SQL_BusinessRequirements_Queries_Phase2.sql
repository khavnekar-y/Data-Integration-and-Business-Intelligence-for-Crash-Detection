-- How many accidents occurred in NYC, Austin, Chicago and Montogomery? --
SELECT COUNT(*) AS NO_OF_ACCIDENTS, ds.SOURCE
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_SOURCE ds ON fct.SOURCE_SK = ds.SOURCE_SK
GROUP BY ds.SOURCE;

/* Which areas in the city had the greatest number of accidents 
Top 3 areas in each city */
WITH ACCIDENTS_RANKING AS (
SELECT dl.STREET_NAME, ds.SOURCE,
COUNT(fct.ACCIDENT_SK) AS NUMBER_OF_ACCIDENTS,
ROW_NUMBER() OVER (PARTITION BY ds.SOURCE ORDER BY COUNT(fct.ACCIDENT_SK) DESC) AS RANKORDER
FROM FCT_ACCIDENTS fct
JOIN DIM_LOCATION dl ON fct.LOCATION_SK = dl.LOCATION_SK
JOIN DIM_SOURCE ds on fct.SOURCE_SK = ds.SOURCE_SK
GROUP BY dl.STREET_NAME, ds.SOURCE
)  SELECT STREET_NAME,SOURCE,NUMBER_OF_ACCIDENTS 
FROM ACCIDENTS_RANKING
WHERE RANKORDER <= 3;

/* How many accidents resulted in just injuries? */
-- Overall --
SELECT COUNT(*) AS INJURIES_FROM_ACCIDENTS
FROM FCT_ACCIDENTS
WHERE TOTAL_INJURED > 0 AND TOTAL_KILLED = 0;

-- By City --
SELECT COUNT(*) AS INJURIES_FROM_ACCIDENTS, dl.CITY AS City
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_LOCATION dl ON fct.LOCATION_SK = dl.LOCATION_SK
WHERE fct.TOTAL_INJURED > 0 AND fct.TOTAL_KILLED = 0
GROUP BY dl.CITY;

/* How often are pedestrians involved in accidents? */
SELECT COUNT(*) AS PEDESTRIAN_ACCIDENT
FROM FCT_ACCIDENTS WHERE IS_PEDESTRIAN = 'Y';

/* When do most accidents happen?
â€¢ seasonality report */
SELECT dd.SEASON, COUNT(*) AS NO_OF_ACCIDENTS
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_DATE dd ON fct.DATE_SK = dd.DATE_SK
GROUP BY dd.SEASON;

/* How many motorists are injured or killed in accidents?*/
-- Overall --
SELECT 
SUM(MOTORIST_INJURED) AS NO_OF_MOTORISTS_INJURED,
SUM(MOTORIST_KILLED) AS NO_OF_MOTORISTS_KILLED
FROM FCT_ACCIDENTS;

-- By City --
SELECT 
SUM(MOTORIST_INJURED) AS NO_OF_MOTORISTS_INJURED,
SUM(MOTORIST_KILLED) AS NO_OF_MOTORISTS_KILLED,
dl.CITY
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_LOCATION dl ON fct.LOCATION_SK = dl.LOCATION_SK
GROUP BY dl.CITY;

/* Which top 5 areas in 4 cities have the most fatal number of accidents? */
WITH ACCIDENTS_RANKING AS (
SELECT dl.STREET_NAME, ds.SOURCE AS CITY,
COUNT(fct.ACCIDENT_SK) AS TOTAL_FATAL_ACCIDENTS,
ROW_NUMBER() OVER (PARTITION BY ds.SOURCE ORDER BY COUNT(fct.ACCIDENT_SK) DESC) AS RANKORDER
FROM FCT_ACCIDENTS fct
JOIN DIM_LOCATION dl ON fct.LOCATION_SK = dl.LOCATION_SK
JOIN DIM_SOURCE ds on fct.SOURCE_SK = ds.SOURCE_SK
WHERE fct.TOTAL_KILLED > 0
GROUP BY dl.STREET_NAME, ds.SOURCE
)  
SELECT STREET_NAME, CITY, TOTAL_FATAL_ACCIDENTS 
FROM ACCIDENTS_RANKING
WHERE RANKORDER <= 5;

/* Time based Analysis of Accidents */
-- Day --
SELECT dd.DAY, COUNT(*) AS NO_OF_ACCIDENTS 
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_DATE dd ON fct.DATE_SK = dd.DATE_SK
GROUP BY dd.DAY
ORDER BY NO_OF_ACCIDENTS;

-- Time --
SELECT dt.TIME_HOUR, COUNT(*) AS NUMBER_OF_ACCIDENTS
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_TIME dt ON fct.TIME_SK = dt.TIME_SK
GROUP BY dt.TIME_HOUR
ORDER BY dt.TIME_HOUR;

-- By WeekDay --
SELECT COUNT(*) AS WEEKDAY_ACCIDENTS
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_DATE dd ON fct.DATE_SK = dd.DATE_SK
WHERE dd.DAY NOT IN ('Saturday', 'Sunday');

-- By Weekend --
SELECT COUNT(*) AS WEEKDAY_ACCIDENTS
FROM FCT_ACCIDENTS fct
INNER JOIN DIM_DATE dd ON fct.DATE_SK = dd.DATE_SK
WHERE dd.DAY IN ('Saturday', 'Sunday');

-- Fatality Analysis --
SELECT
SUM(PEDESTRIAN_KILLED) AS PEDESTRIANS_FATALITIES,
(SUM(TOTAL_KILLED) - SUM(PEDESTRIAN_KILLED)) AS OTHER_USERS_FATALITIES
FROM FCT_ACCIDENTS;

-- What are the most common factors involved in accidents? --
SELECT COUNT(*) AS TOTAL_COUNT, dc.DESCRIPTION 
FROM BRG_ACC_CONTR brg
INNER JOIN FCT_ACCIDENTS fct ON fct.ACCIDENT_SK = brg.ACCIDENT_SK
INNER JOIN DIM_CONTRIBUTOR dc ON brg.CONTRIBUTOR_SK = dc.CONTRIBUTOR_SK
GROUP BY dc.DESCRIPTION
ORDER BY TOTAL_COUNT DESC
LIMIT 10;